02/15/2024: 3:20 to 4:00pm. Full group.
Drew static diagrams for system architecture and component architecture.
Discussed design of similar games, such as Bit Life and the Oregon Trail.

Initial brainstorm:

Dog should be a class with its own user-viewable properties, and secret properties.

User should be a class with its own user-viewable properties, no secret properties for the user have been discussed.

Dog should have status affects whose description is defined in a dictionary. These status effects largely include afflictions, such as: Giardia, Chipped tooth, Foxtail, Bee-sting, Torn ACL, Hip Dysplasia, Cancer, etc. For the initial prototype we will seek only to define and implement a few of these status effects, and expand as we go.

Status effects have a duration (either permanent, or listed in time or round units) and an effect. This effect can be cumulative (triggered with every new round) or passive. In either case, the status will likely call a Dog method when invoked to modify Dog attributes (such as Health or Happiness).

Round length is still being discussed, but 3-months is likely. This way the game should give you enough time with your dog for you to form some attachment, but it shouldn't be long, boring or gruelling. You will have experienced plenty in that time.

Between every time round, you can adjust lifestyle choices, such as time spent walking your dog, dog grooming schedule, dog diet and treats given, time spent socializing dog with other dogs, vet checkups, etc. For the prototype, we may commit to only a couple of these lifestyle choices (such as walk schedule, diet and vet-checkups).

Game should be largely text-based, with GUI offering convenient methods to select and change lifestyle choices between rounds, but the majority of the game is responding to event-driven text-prompts.

Events are queued up by a random number generator and consulted event tables during every round. Likely there will be 3-4 events per round, but your actions may sometimes trigger additional events (or avoid them). These events will have small text decision trees, but the end result will be a mechanical effect, such as the addition of a new Dog status or the modification of Dog or Human stats. This keeps the control flow of the game streamlined and avoids branching.

Dogs statistics should be randomized, but user should be allowed to select lifestyle parameters (such as income, work-hours, etc.) for themselves (if preferred).

Some kind of file storage system for the game is early in discussion.

Research on financial and time constraints of living with a dog needs to be incorporated into design parameters.
